12112121121211, fold 6 times
12112121121121, fold 5 times
121112112112122112, fold 10 times
12121221121111121211121212
33221113543254654321332211

121211212121112

121211212121112

123456

121112121211212111  432543322143221211  112123423345122342   fold 7 times.


no overlap
112211221122

overlap inside
41123211311232115


greed fail at right
overlap right
112321221  (only left 6, only right 7)


greed fail at left
overlap left
3111232112 (only left 7, only right 6)


greed fail at both side
overlap two side
1123212213111232112(only left 12, only right 12, minimal 11) 

11232122131112321121123212213111232112 19 times

1123212213111232112112321221311123211211232122131112321121123212213111232112  fold 35 times




Input : 123121

  |  |
   1


Input : 12112121121121 (length 14)

            0   1   2   3   4   5   6   7   8   9   10  11  12  13
Input       1	2	1	1	2	1	2	1	1	2	1	1	2	1
Palindrome  1	3	1	1	3	11	3	1	1	9	1	1	3	1 {O(n) Manacher}
PLeftMost:
            1
            2   1 
            2   1   1 
            2   1   1   2
            2   1   1   2   1
            6   5   4   3   2   1
            6   5   4   3   2   2   1
            6   5   4   3   2   2   1   1
            6   5   4   3   2   2   1   1   1
            6   5   4   3   2   5   4   3   2   1   
            6   5   4   3   2   5   4   3   2   1   1 
            6   5   4   3   2   5   4   3   2   1   1   2   
            6   5   4   3   2   5   4   3   2   1   1   2   1
            6   5   4   3   2   5   4   3   2   1   1   2   1   1



            0   1   2   3   4   5   6   7   8   9   10  11  12  13
Input       1	2	1	1	2	1	2	1	1	2	1	1	2	1
Palindrome  1	3	1	1	3	11	3	1	1	9	1	1	3	1
L           6	5	4	3	2	5	4	3	2	1	1	2	1	1
R           1	1	2	1	1	2	2	3	4	5	6	3	4	5



dp[i][j] = k
    minimal fold times from i to j is k

dp[i][j] = 1 + min(dp[i + L[i]][j], dp[i][j - R[j]])  (i < j)
           1                                          (i = j)
           max                                        (i > j)

dp table:

     0  1  2  3  4  5  6  7  8  9  10 11 12 13
0:  [1, 2, 2, 3, 4, 4, 2, 5, 5, 5, 3, 4, 6, 5]
1:  [m, 1, m, m, m, m, 2, m, m, m, 3, 4, m, 5]
2:  [m, m, 1, 2, 3, 3, 2, 4, 4, 4, 3, 4, 5, 5]
3:  [m, m, m, 1, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4]
4:  [m, m, m, m, 1, m, 2, 2, 2, 2, 2, 3, 3, 3]
5:  [m, m, m, m, m, 1, m, m, m, m, 2, 3, m, 4]
6:  [m, m, m, m, m, m, 1, m, m, m, 2, 3, m, 4]                                                            
7:  [m, m, m, m, m, m, m, 1, m, m, 2, 3, m, 4]
8:  [m, m, m, m, m, m, m, m, 1, m, 2, 2, 2, 2]
9:  [m, m, m, m, m, m, m, m, m, 1, 2, 3, m, 4]
10: [m, m, m, m, m, m, m, m, m, m, 1, 2, m, 3]
11: [m, m, m, m, m, m, m, m, m, m, m, 1, m, 2]
12: [m, m, m, m, m, m, m, m, m, m, m, m, 1, 2]
13: [m, m, m, m, m, m, m, m, m, m, m, m, m, 1]

dp[0, 13]   = 1 + min(dp[6][13],  dp[0][8])  = 1 + dp[6][13] (4)  fold at 6 - 1
dp[6, 13]   = 1 + min(dp[10][13], dp[6][8])  = 1 + dp[10][13](3)  fold at 10 - 1
dp[10, 13]  = 1 + min(dp[11][13], dp[10][8]) = 1 + dp[11][13](2)  fold at 11 - 1
dp[11, 13]  = 1 + min(dp[13][13], dp[11][8]) = 1 + dp[13][13](1)  fold at 13 - 1
                                                                  fold at 13
fold seq : 5, 9, 10, 12, 13







[m, m, m, m, m, m, m, m, 1, 2, 2, 2, 2, 2]

wrong:
    dp[8, 11] = 1 + min(dp[10][11], dp[8][9])


        11      15
    ... 5 1 2 3 4 ...
pleft   1 1 1 1 1    
pright  1 2 3 4 5 ...

     0  1  2  3  4  5  6  7  8  9  10 11 12 13
0:  [1, 2, 2, 3, 4, 4, 2, 3, 5, 5, 3, 4, 5, 5]
1:  [m, 1, 2, 3, 4, 4, 2, 3, 5, 5, 3, 4, 5, 5]
2:  [m, m, 1, 2, 3, 3, 2, 3, 4, 4, 3, 4, 5, 5]
3:  [m, m, m, 1, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4]
4:  [m, m, m, m, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3]
5:  [m, m, m, m, m, 1, 2, m, m, m, 2, 3, 4, 4]
6:  [m, m, m, m, m, m, 1, 2, m, m, 2, 3, 4, 4]
7:  [m, m, m, m, m, m, m, 1, 2, m, 2, 3, 3, 3]
8:  [m, m, m, m, m, m, m, m, 1, 2, 2, 2, 2, 2]
9:  [m, m, m, m, m, m, m, m, m, 1, 2, 3, 4, 4]
10: [m, m, m, m, m, m, m, m, m, m, 1, 2, 3, 3]
11: [m, m, m, m, m, m, m, m, m, m, m, 1, 2, 2]
12: [m, m, m, m, m, m, m, m, m, m, m, m, 1, 2]
13: [m, m, m, m, m, m, m, m, m, m, m, m, m, 1]




Sequence	        0	1	2	3
Input Array	        1	2	1	1
Palindrome array	1	3	1	1
PLeftMost	        2	1	1	1
PRightMost	        1	1	2	1

0: [1, 2, 2, 3]
1: [m, 1, 2, 3]
2: [m, m, 1, 2]
3: [m, m, m, 1]

dp[0, 3] = 1 + dp[2, 3] + dp[0, 2]  fold at 2 - 1 = 1 or fold at 2 + 1 = 3

dp[2, 3] = 1 + dp[3, 3] + dp[2, 2] 1, 2, 3, or 1, 3, 2

dp[0, 2] = 1 + dp[2, 2] + dp[0, 0] 3, 1, 2 or 3, 1, 0

dp[3, 3] = 1
dp[2, 2] = 1
dp[0, 0] = 1




            0   1   2   3   4   5   6   7   8   9   10  11  12  13
Input       1	2	1	1	2	1	2	1	1	2	1	1	2	1
Palindrome  1	3	1	1	3	11	3	1	1	9	1	1	3	1
L           6	5	4	3	2	5	4	3	2	1	1	2	1	1
R           1	1	2	1	1	2	2	3	4	5	6	3	4	5

     0  1  2  3  4  5  6  7  8  9  10 11 12 13
0:  [1, 2, 2, 3, 4, 4, 2, 5, 5, 5, 3, 4, 6, 5]
1:  [m, 1, m, m, m, m, 2, m, m, m, 3, 4, m, 5]
2:  [m, m, 1, 2, 3, 3, 2, 4, 4, 4, 3, 4, 5, 5]
3:  [m, m, m, 1, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4]
4:  [m, m, m, m, 1, m, 2, 2, 2, 2, 2, 3, 3, 3]
5:  [m, m, m, m, m, 1, m, m, m, m, 2, 3, m, 4]
6:  [m, m, m, m, m, m, 1, m, m, m, 2, 3, m, 4]
7:  [m, m, m, m, m, m, m, 1, m, m, 2, 3, m, 4]
8:  [m, m, m, m, m, m, m, m, 1, m, 2, 2, 2, 2]
9:  [m, m, m, m, m, m, m, m, m, 1, 2, 3, m, 4]
10: [m, m, m, m, m, m, m, m, m, m, 1, 2, m, 3]
11: [m, m, m, m, m, m, m, m, m, m, m, 1, m, 2]
12: [m, m, m, m, m, m, m, m, m, m, m, m, 1, 2]
13: [m, m, m, m, m, m, m, m, m, m, m, m, m, 1]



            0   1   2   3   4   5   6   7   8   9   10  11  12  13
Input       1	2	1	1	2	1	2	1	1	2	1	1	2	1
Palindrome  1	3	1	1	3	11	3	1	1	9	1	1	3	1
L           6	5	4	3	2	5	4	3	2	1	1	2	1	1
R           1	1	2	1	1	2	2	3	4	5	6	3	4	5

     0  1  2  3  4  5  6  7  8  9  10 11 12 13
0:  [1, 2, m, m, m, m, m, m, m, m, m, m, m, m]
1:  [m, 1, m, m, m, m, m, m, m, m, m, m, m, m]
2:  [m, m, 1, 2, 3, 3, 4, 4, m, m, m, m, m, m]
3:  [m, m, m, 1, 2, m, 3, m, m, m, m, m, m, m]
4:  [m, m, m, m, 1, m, 2, m, m, m, m, m, m, m]
5:  [m, m, m, m, m, 1, m, m, m, m, m, m, m, 4]
6:  [m, m, m, m, m, m, 1, m, m, m, m, m, m, m]
7:  [m, m, m, m, m, m, m, 1, m, m, m, m, m, 4]
8:  [m, m, m, m, m, m, m, m, 1, m, 2, m, m, 4]
9:  [m, m, m, m, m, m, m, m, m, 1, m, m, m, 4]
10: [m, m, m, m, m, m, m, m, m, m, 1, m, m, 3]
11: [m, m, m, m, m, m, m, m, m, m, m, 1, m, 2]
12: [m, m, m, m, m, m, m, m, m, m, m, m, 1, m]
13: [m, m, m, m, m, m, m, m, m, m, m, m, m, 1]


dp[0, 13]   = 1 + min(dp[6][13],  dp[0][8])  = 1 + dp[6][13] (4)  fold at 6 - 1
dp[6, 13]   = 1 + min(dp[10][13], dp[6][8])  = 1 + dp[10][13](3)  fold at 10 - 1
dp[10, 13]  = 1 + min(dp[11][13], dp[10][8]) = 1 + dp[11][13](2)  fold at 11 - 1
dp[11, 13]  = 1 + min(dp[13][13], dp[11][8]) = 1 + dp[13][13](1)  fold at 13 - 1
                                                                  fold at 13

dp[0, 13] = 1+ dp[6, 13]m dp[0, 8]m
dp[6, 13] = dp[10, 13] dp [6, 8]
dp[10, 13] = dp[11, 13]3
dp[11, 13] = 2
dp[13, 13] = 1

fold seq : 5, 9, 10, 12, 13




         0  1  2  3  4  5  6  7  8  9  10 11 12 13
0: (14) [1, 2, 2, 3, 4, 4, 5, 5, 5, 5, 5, 6, 5, 5]
1: (14) [m, 1, 2, 3, 4, 4, 5, 5, 5, 5, m, 6, 5, 5]
2: (14) [m, m, 1, 2, 3, 3, 4, 4, 4, m, m, 5, 5, 5]
3: (14) [m, m, m, 1, 2, 2, 3, 3, m, m, m, m, 5, 5]
4: (14) [m, m, m, m, 1, 2, 2, 3, m, m, m, m, 5, 5]
5: (14) [m, m, m, m, m, 1, 2, m, m, m, m, m, m, 4]
6: (14) [m, m, m, m, m, m, 1, 2, m, m, m, m, 4, 4]
7: (14) [m, m, m, m, m, m, m, 1, 2, m, m, 3, 4, 4]
8: (14) [m, m, m, m, m, m, m, m, 1, 2, 2, 3, 4, 4]
9: (14) [m, m, m, m, m, m, m, m, m, 1, 2, 3, 4, 4]
10: (14)[m, m, m, m, m, m, m, m, m, m, 1, 2, 3, 3]
11: (14)[m, m, m, m, m, m, m, m, m, m, m, 1, 2, 2]
12: (14)[m, m, m, m, m, m, m, m, m, m, m, m, 1, 2]
13: (14)[m, m, m, m, m, m, m, m, m, m, m, m, m, 1]


            0   1   2   3   4   5   6   7   8   9   10  11  12  13
Input       1	2	1	1	2	1	2	1	1	2	1	1	2	1
Palindrome  1	3	1	1	3	11	3	1	1	9	1	1	3	1
L           6	5	4	3	2	5	4	3	2	1	1	2	1	1
R           1	1	2	1	1	2	2	3	4	5	6	3	4	5

         0  1  2  3  4  5  6  7  8  9  10 11 12 13
0: (14) [1, 2, 2, 3, 4, 4, 5, 5, 5, 5, 5, 6, 5, 5]
1: (14) [m, 1, 2, 3, 4, 4, 5, 5, 5, 5, m, 6, 5, 5]
2: (14) [m, m, 1, 2, 3, 3, 4, 4, 4, m, m, 5, 5, 5]
3: (14) [m, m, m, 1, 2, 2, 3, 3, m, m, m, m, 5, 5]
4: (14) [m, m, m, m, 1, 2, 2, 3, m, m, m, m, 5, 5]
5: (14) [m, m, m, m, m, 1, 2, m, m, m, m, m, m, 4]
6: (14) [m, m, m, m, m, m, 1, 2, m, m, m, m, 4, 4]
7: (14) [m, m, m, m, m, m, m, 1, 2, m, m, 3, 4, 4]
8: (14) [m, m, m, m, m, m, m, m, 1, 2, 2, 3, 4, 4]
9: (14) [m, m, m, m, m, m, m, m, m, 1, 2, 3, 4, 4]
10: (14)[m, m, m, m, m, m, m, m, m, m, 1, 2, 3, 3]
11: (14)[m, m, m, m, m, m, m, m, m, m, m, 1, 2, 2]
12: (14)[m, m, m, m, m, m, m, m, m, m, m, m, 1, 2]
13: (14)[m, m, m, m, m, m, m, m, m, m, m, m, m, 1]



new dp table 
         0  1  2  3  4  5  6  7  8  9  10 11 12 13
0: (14) [1, 2, 2, 3, 4, 4, 5, 5, 5, 5, 5, 6, 5, 5]
1: (14) [m, 1, 2, 3, 4, 4, 5, 5, 6, 5, 5, 6, 5, 5]
2: (14) [m, m, 1, 2, 3, 3, 4, 4, 5, 6, 5, 6, 5, 5]
3: (14) [m, m, m, 1, 2, 2, 3, 3, 4, 5, 5, 5, 5, 5]
4: (14) [m, m, m, m, 1, 2, 3, 3, 4, 5, 5, 5, 5, 5]
5: (14) [m, m, m, m, m, 1, 2, 2, 3, 4, 4, 4, 4, 4]
6: (14) [m, m, m, m, m, m, 1, 2, 3, 4, 4, 5, 4, 4]
7: (14) [m, m, m, m, m, m, m, 1, 2, 3, 4, 5, 5, 4]
8: (14) [m, m, m, m, m, m, m, m, 1, 2, 3, 4, 4, 4]
9: (14) [m, m, m, m, m, m, m, m, m, 1, 2, 3, 4, 4]
10: (14)[m, m, m, m, m, m, m, m, m, m, 1, 2, 3, 3]
11: (14)[m, m, m, m, m, m, m, m, m, m, m, 1, 2, 2]
12: (14)[m, m, m, m, m, m, m, m, m, m, m, m, 1, 2]
13: (14)[m, m, m, m, m, m, m, m, m, m, m, m, m, 1]

     = 1 + min(dp[10][11], dp[8][9])
dp[8, 11] = dp[9, 11], dp[8, 10]

dp[8, 10] = dp[9, 10] dp[8, 9]
         0  1  2  3  4  5  6  7  8  9  10 11 12 13
    8   [1, 1, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0]





            0   1   2   3   4   5   6   7   8   9   10  11  12  13
Input       1	2	1	1	2	1	2	1	1	2	1	1	2	1
Palindrome  1	3	1	1	3	11	3	1	1	9	1	1	3	1
L           6	5	4	3	2	5	4	3	2	1	1	2	1	1
R           1	1	2	1	1	2	2	3	4	5	6	3	4	5


         0  1  2  3  4  5  6  7  8  9  10 11 12 13
0: (14) [1, 2, 2, 3, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5]
1: (14) [m, 1, 2, 3, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5]
2: (14) [m, m, 1, 2, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5]
3: (14) [m, m, m, 1, 2, 2, 3, 3, 4, 5, 5, 5, 5, 5]
4: (14) [m, m, m, m, 1, 2, 2, 3, 4, 5, 5, 5, 5, 5]
5: (14) [m, m, m, m, m, 1, 2, 2, 3, 4, 4, 4, 4, 4]
6: (14) [m, m, m, m, m, m, 1, 2, 3, 4, 4, 4, 4, 4]
7: (14) [m, m, m, m, m, m, m, 1, 2, 3, 3, 3, 4, 4]
8: (14) [m, m, m, m, m, m, m, m, 1, 2, 2, 3, 4, 4]
9: (14) [m, m, m, m, m, m, m, m, m, 1, 2, 3, 4, 4]
10: (14)[m, m, m, m, m, m, m, m, m, m, 1, 2, 3, 3]
11: (14)[m, m, m, m, m, m, m, m, m, m, m, 1, 2, 2]
12: (14)[m, m, m, m, m, m, m, m, m, m, m, m, 1, 2]
13: (14)[m, m, m, m, m, m, m, m, m, m, m, m, m, 1]



Left
0: (14) [1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 6, 6, 6, 6]
1: (14) [1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 0]
2: (14) [1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 0, 0]
3: (14) [1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0]
4: (14) [1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0]
5: (14) [1, 1, 2, 2, 2, 2, 2, 2, 5, 5, 0, 0, 0, 0]
6: (14) [1, 1, 1, 1, 1, 1, 4, 4, 0, 0, 0, 0, 0, 0]
7: (14) [1, 1, 1, 1, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0]
8: (14) [1, 1, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0]
9: (14) [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
10: (14)[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
11: (14)[1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
12: (14)[1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
13: (14)[1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]


Right
0: (14) [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
1: (14) [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
2: (14) [1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
3: (14) [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
4: (14) [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
5: (14) [1, 1, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0]
6: (14) [1, 1, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0]
7: (14) [1, 1, 2, 2, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0]
8: (14) [1, 1, 1, 1, 1, 1, 4, 4, 4, 0, 0, 0, 0, 0]
9: (14) [1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 0, 0, 0, 0]
10: (14)[1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 6, 6, 0, 0]
11: (14)[1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0]
12: (14)[1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 4, 0]
13: (14)[1, 1, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5]